--
-- VHDL Architecture Beamer_test.ahbBeamer_tb.struct
--
-- Created:
--          by - johan.chenaux.UNKNOWN (WEA30906)
--          at - 14:04:01 29.04.2019
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2018.1 (Build 12)
--
LIBRARY ieee;
  USE ieee.std_logic_1164.all;
  USE ieee.numeric_std.all;
LIBRARY AhbLite;
  USE AhbLite.ahbLite.all;

LIBRARY Beamer;
LIBRARY Beamer_test;
LIBRARY WaveformGenerator;

ARCHITECTURE struct OF ahbBeamer_tb IS

   -- Architecture declarations
   constant patternAddressBitNb: positive := 9;
   constant testOutBitNb: positive := 16;
   
   constant signalBitNb: positive := 16;
   constant lowpassShiftBitNb: positive := 8;

   -- Internal signal declarations
   SIGNAL clock       : std_ulogic;
   SIGNAL hAddr       : unsigned( ahbAddressBitNb-1 DOWNTO 0 );
   SIGNAL hClk        : std_uLogic;
   SIGNAL hRData      : std_ulogic_vector(ahbDataBitNb-1 DOWNTO 0);
   SIGNAL hReady      : std_uLogic;
   SIGNAL hReset_n    : std_uLogic;
   SIGNAL hResp       : std_uLogic;
   SIGNAL hSel        : std_uLogic;
   SIGNAL hTrans      : std_ulogic_vector(ahbTransBitNb-1 DOWNTO 0);
   SIGNAL hWData      : std_ulogic_vector(ahbDataBitNb-1 DOWNTO 0);
   SIGNAL hWrite      : std_uLogic;
   SIGNAL lowpassInY  : unsigned(signalBitNb-1 DOWNTO 0);
   SIGNAL lowpassOutY : unsigned(signalBitNb-1 DOWNTO 0);
   SIGNAL outX        : std_ulogic;
   SIGNAL outY        : std_ulogic;
   SIGNAL reset       : std_ulogic;
   SIGNAL selSinCos   : std_ulogic;


   -- Component Declarations
   COMPONENT ahbBeamer
   GENERIC (
      patternAddressBitNb : positive := 9;
      testOutBitNb        : positive := 16
   );
   PORT (
      outX      : OUT    std_ulogic ;
      hAddr     : IN     unsigned (ahbAddressBitNb-1 DOWNTO 0);
      outY      : OUT    std_ulogic ;
      hWData    : IN     std_ulogic_vector (ahbDataBitNb-1 DOWNTO 0);
      selSinCos : IN     std_ulogic ;
      testOut   : OUT    std_ulogic_vector (1 TO testOutBitNb);
      hRData    : OUT    std_ulogic_vector (ahbDataBitNb-1 DOWNTO 0);
      hTrans    : IN     std_ulogic_vector (ahbTransBitNb-1 DOWNTO 0);
      hWrite    : IN     std_ulogic ;
      hSel      : IN     std_ulogic ;
      hReady    : OUT    std_ulogic ;
      hResp     : OUT    std_ulogic ;
      hClk      : IN     std_ulogic ;
      hReset_n  : IN     std_ulogic 
   );
   END COMPONENT;
   COMPONENT ahbBeamer_tester
   GENERIC (
      patternAddressBitNb : positive := 1;
      signalBitNb         : positive := 1
   );
   PORT (
      hRData      : IN     std_ulogic_vector (ahbDataBitNb-1 DOWNTO 0);
      hReady      : IN     std_uLogic ;
      hResp       : IN     std_uLogic ;
      lowpassOutY : IN     unsigned (signalBitNb-1 DOWNTO 0);
      outX        : IN     std_ulogic ;
      outY        : IN     std_ulogic ;
      clock       : OUT    std_ulogic ;
      hAddr       : OUT    unsigned ( ahbAddressBitNb-1 DOWNTO 0 );
      hClk        : OUT    std_uLogic ;
      hReset_n    : OUT    std_uLogic ;
      hSel        : OUT    std_uLogic ;
      hTrans      : OUT    std_ulogic_vector (ahbTransBitNb-1 DOWNTO 0);
      hWData      : OUT    std_ulogic_vector (ahbDataBitNb-1 DOWNTO 0);
      hWrite      : OUT    std_uLogic ;
      reset       : OUT    std_ulogic ;
      selSinCos   : OUT    std_ulogic 
   );
   END COMPONENT;
   COMPONENT lowpass
   GENERIC (
      signalBitNb : positive := 16;
      shiftBitNb  : positive := 12
   );
   PORT (
      lowpassOut : OUT    unsigned (signalBitNb-1 DOWNTO 0);
      clock      : IN     std_ulogic ;
      reset      : IN     std_ulogic ;
      lowpassIn  : IN     unsigned (signalBitNb-1 DOWNTO 0)
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : ahbBeamer USE ENTITY Beamer.ahbBeamer;
   FOR ALL : ahbBeamer_tester USE ENTITY Beamer_test.ahbBeamer_tester;
   FOR ALL : lowpass USE ENTITY WaveformGenerator.lowpass;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 2 eb2
   lowpassInY <= (others => outY);


   -- Instance port mappings.
   I_DUT : ahbBeamer
      GENERIC MAP (
         patternAddressBitNb => patternAddressBitNb,
         testOutBitNb        => testOutBitNb
      )
      PORT MAP (
         outX      => outX,
         hAddr     => hAddr,
         outY      => outY,
         hWData    => hWData,
         selSinCos => selSinCos,
         testOut   => OPEN,
         hRData    => hRData,
         hTrans    => hTrans,
         hWrite    => hWrite,
         hSel      => hSel,
         hReady    => hReady,
         hResp     => hResp,
         hClk      => hClk,
         hReset_n  => hReset_n
      );
   I_tester : ahbBeamer_tester
      GENERIC MAP (
         patternAddressBitNb => patternAddressBitNb,
         signalBitNb         => signalBitNb
      )
      PORT MAP (
         hRData      => hRData,
         hReady      => hReady,
         hResp       => hResp,
         lowpassOutY => lowpassOutY,
         outX        => outX,
         outY        => outY,
         clock       => clock,
         hAddr       => hAddr,
         hClk        => hClk,
         hReset_n    => hReset_n,
         hSel        => hSel,
         hTrans      => hTrans,
         hWData      => hWData,
         hWrite      => hWrite,
         reset       => reset,
         selSinCos   => selSinCos
      );
   I_filt : lowpass
      GENERIC MAP (
         signalBitNb => signalBitNb,
         shiftBitNb  => lowpassShiftBitNb
      )
      PORT MAP (
         lowpassOut => lowpassOutY,
         clock      => clock,
         reset      => reset,
         lowpassIn  => lowpassInY
      );

END struct;
